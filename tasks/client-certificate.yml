---
- name: Client - Create directory for certificates/keys
  file:
    path: "{{ openssl_clients_dir }}/{{ item.common_name }}"
    state: directory
    mode: 0600
  with_items: "{{ openssl_clients }}"

- name: Client - Create configuration file.
  template:
    src: clients-config.cnf.j2
    dest: "{{ openssl_clients_dir }}/{{ item.common_name }}/{{ item.common_name }}.cnf"
    mode: 0640
  with_items: "{{ openssl_clients }}"
  become: true
  register: _clients_cnf

# Force replacement if enabled
- name: Client - Move existing certificates/key if replacement is enabled.
  block:
    - set_fact:
        clients_prefix: "replaced-{{ ansible_date_time.date }}-{{ ansible_date_time.hour }}{{ ansible_date_time.minute }}{{ ansible_date_time.second }}"

    - name: Client - Create directory for existing certificates/keys.
      file:
        path: "{{ openssl_clients_dir }}/{{ clients_prefix }}"
        state: directory
        mode: 0600

    - name: Client - Move existing CSR.
      command:
        cmd: mv {{ item.common_name }}.csr {{ clients_prefix }}
        chdir: "{{ openssl_clients_dir }}/{{ item.common_name }}"
      with_items: "{{ openssl_clients }}"
      failed_when: false

    - name: Client - Move existing key.
      command:
        cmd: mv {{ item.common_name }}.key {{ clients_prefix }}
        chdir: "{{ openssl_clients_dir }}/{{ item.common_name }}"
      with_items: "{{ openssl_clients }}"
      failed_when: false

    - name: Client - Move existing certificate.
      command:
        cmd: mv {{ item.common_name }}.crt {{ clients_prefix }}
        chdir: "{{ openssl_clients_dir }}/{{ item.common_name }}"
      with_items: "{{ openssl_clients }}"
      failed_when: false
  when: _clients_cnf.changed or openssl_clients_force_replace or openssl_ca_force_replace


- name: Client - Create private key and CSR.
  command:
    cmd: >
      openssl req -nodes -newkey rsa:2048
      -out {{ item.common_name }}.csr
      -config {{ openssl_clients_dir }}/{{ item.common_name }}/{{ item.common_name }}.cnf
    chdir: "{{ openssl_clients_dir }}/{{ item.common_name }}"
    creates: "{{ openssl_clients_dir }}/{{ item.common_name }}/{{ item.common_name }}.key"
  with_items: "{{ openssl_clients }}"

- name: Client - Create certificate signed by CA.
  command:
    cmd: >
      openssl x509 -req
      -days {{ openssl_clients_cert_expiry }}
      -in {{ openssl_clients_dir }}/{{ item.common_name }}/{{ item.common_name }}.csr
      -CA {{ openssl_ca_dir }}/{{ openssl_ca_cert }}
      -CAkey {{ openssl_ca_dir }}/{{ openssl_ca_key }}
      -CAcreateserial
      -out {{ item.common_name }}.crt
      -passin pass:{{ openssl_secret_ca_passphrase }}
      -extfile {{ openssl_clients_dir }}/{{ item.common_name }}/{{ item.common_name }}.cnf
      -extensions v3_req
    chdir: "{{ openssl_clients_dir }}/{{ item.common_name }}"
    creates: "{{ openssl_clients_dir }}/{{ item.common_name }}/{{item.common_name}}.crt"
  with_items: "{{ openssl_clients }}"
